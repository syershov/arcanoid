#!/usr/bin/env node

import { execSync, spawn } from 'child_process';
import { checkProjectStatus } from './check-status.js';
import readline from 'readline';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
const askQuestion = (question) => {
  return new Promise((resolve) => {
    rl.question(question, (answer) => {
      resolve(answer.trim());
    });
  });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
const execCommand = (command) => {
  try {
    return execSync(command, { encoding: 'utf8', stdio: 'pipe' }).trim();
  } catch (error) {
    return '';
  }
};

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Vite
const stopViteProcesses = () => {
  console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Vite...');
  try {
    execSync('pkill -f "vite"', { stdio: 'pipe' });
    console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    execSync('sleep 2');
  } catch (error) {
    console.log('‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
  }
};

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞
const startProject = (command = 'npm run dev:system') => {
  console.log(`üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞: ${command}`);

  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    const child = spawn('npm', ['run', 'dev:system'], {
      stdio: 'inherit',
      detached: false
    });

    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');
    console.log('üìç URL –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥');
    console.log('üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');

    return child;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:', error.message);
    return null;
  }
};

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
const safeStart = async () => {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞ Arcanoid...\n');

  try {
    const status = checkProjectStatus();

    if (status.isRunning) {
      console.log('‚ö†Ô∏è  –ü—Ä–æ–µ–∫—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω!');
      console.log(`üìç URL: ${status.url}`);
      console.log(`‚ö° –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: ${status.processes.length}`);

      status.processes.forEach((proc, index) => {
        console.log(`   ${index + 1}. PID: ${proc.pid}`);
      });

      console.log('\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:');
      console.log('1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–µ—Ä–≤–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)');
      console.log('2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä');
      console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–º –ø–æ—Ä—Ç—É');
      console.log('4. –û—Ç–º–µ–Ω–∞');

      const choice = await askQuestion('\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ');

      switch (choice) {
        case '2':
          stopViteProcesses();
          startProject();
          break;

        case '3':
          console.log('üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞ –¥—Ä—É–≥–æ–º –ø–æ—Ä—Ç—É...');
          startProject('npm run dev');
          break;

        case '4':
          console.log('‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
          break;

        case '1':
        case '':
        default:
          console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–µ—Ä–≤–µ—Ä');
          console.log(`üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: ${status.url}`);
          break;
      }

    } else {
      console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω, –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å');

      if (status.ports.length > 0) {
        console.log('‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∑–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã:');
        status.ports.forEach(port => {
          console.log(`   - –ü–æ—Ä—Ç ${port.port}: ${port.process}`);
        });
        console.log('Vite –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç\n');
      }

      startProject();
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏...');
    startProject();
  } finally {
    rl.close();
  }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  rl.close();
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
  rl.close();
  process.exit(0);
});

// –ó–∞–ø—É—Å–∫, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  safeStart().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  });
}

export { safeStart, stopViteProcesses, startProject };
